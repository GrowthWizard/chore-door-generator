{"ast":null,"code":"var _jsxFileName = \"/Users/dominikstein/Development/React-Projects/doorgame/src/components/GameButton/gameButton.js\";\nimport React from 'react';\nimport './gameButton.css';\nimport doorGame from '../DoorGame/doorGame';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GameButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleOnClick = this.handleOnClick.bind(this);\n  }\n  /*randomChoreDoorGenerator() {\n      const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n      if (randomDoorGenerator === 0) {\n          this.setState({doors: {door1: {src: doorImage.robot}}});\n          this.setState({doors: {door2: {src: doorImage.beach}}});\n          this.setState({doors: {door3: {src: doorImage.space}}});\n          //openDoor1 = botDoorPath;\n          //openDoor2 = beachDoorPath;\n          //openDoor3 = spaceDoorPath;\n      } else if (randomDoorGenerator === 1) {\n          this.setState({doors: {door1: {src: doorImage.beach}}});\n          this.setState({doors: {door2: {src: doorImage.robot}}});\n          this.setState({doors: {door3: {src: doorImage.space}}});\n          //openDoor1 = beachDoorPath;\n          //openDoor2 = botDoorPath;\n          //openDoor3 = spaceDoorPath;\n      } else {\n          this.setState({doors: {door1: {src: doorImage.space}}});\n          this.setState({doors: {door2: {src: doorImage.beach}}});\n          this.setState({doors: {door2: {src: doorImage.robot}}});\n          //openDoor1 = beachDoorPath;\n          //openDoor2 = spaceDoorPath;\n          //openDoor3 = botDoorPath;\n      }\n  }*/\n\n\n  handleOnClick() {\n    if (!this.props.currentlyPlaying) {\n      this.props.startGame();\n    } else {\n      console.log('Du kannst ein Spiel nur starten, nachdem du verloren oder gewonnen hast.');\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"start\",\n      className: \"start-row\",\n      onClick: this.handleOnClick,\n      children: this.props.buttonText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GameButton;","map":{"version":3,"sources":["/Users/dominikstein/Development/React-Projects/doorgame/src/components/GameButton/gameButton.js"],"names":["React","doorGame","GameButton","Component","constructor","props","handleOnClick","bind","currentlyPlaying","startGame","console","log","render","buttonText"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;;;AAEA,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAwC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBC,IAAnB,CAAwB,IAAxB,CAArB;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEID,EAAAA,aAAa,GAAG;AACZ,QAAG,CAAC,KAAKD,KAAL,CAAWG,gBAAf,EAAgC;AAC5B,WAAKH,KAAL,CAAWI,SAAX;AACH,KAFD,MAEO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,0EAAZ;AACH;AACJ;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,EAAE,EAAC,OAAR;AACI,MAAA,SAAS,EAAC,WADd;AAEI,MAAA,OAAO,EAAE,KAAKN,aAFlB;AAAA,gBAGK,KAAKD,KAAL,CAAWQ;AAHhB;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AAhDmC;;AAmDxC,eAAeX,UAAf","sourcesContent":["import React from 'react';\nimport './gameButton.css';\nimport doorGame from '../DoorGame/doorGame';\n\nclass GameButton extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n\n    /*randomChoreDoorGenerator() {\n        const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n        if (randomDoorGenerator === 0) {\n            this.setState({doors: {door1: {src: doorImage.robot}}});\n            this.setState({doors: {door2: {src: doorImage.beach}}});\n            this.setState({doors: {door3: {src: doorImage.space}}});\n            //openDoor1 = botDoorPath;\n            //openDoor2 = beachDoorPath;\n            //openDoor3 = spaceDoorPath;\n        } else if (randomDoorGenerator === 1) {\n            this.setState({doors: {door1: {src: doorImage.beach}}});\n            this.setState({doors: {door2: {src: doorImage.robot}}});\n            this.setState({doors: {door3: {src: doorImage.space}}});\n            //openDoor1 = beachDoorPath;\n            //openDoor2 = botDoorPath;\n            //openDoor3 = spaceDoorPath;\n        } else {\n            this.setState({doors: {door1: {src: doorImage.space}}});\n            this.setState({doors: {door2: {src: doorImage.beach}}});\n            this.setState({doors: {door2: {src: doorImage.robot}}});\n            //openDoor1 = beachDoorPath;\n            //openDoor2 = spaceDoorPath;\n            //openDoor3 = botDoorPath;\n        }\n}*/\n\n    handleOnClick() {\n        if(!this.props.currentlyPlaying){\n            this.props.startGame();\n        } else {\n            console.log('Du kannst ein Spiel nur starten, nachdem du verloren oder gewonnen hast.')\n        }\n    }\n\n    render(){\n        return (\n            <div id=\"start\" \n                className=\"start-row\" \n                onClick={this.handleOnClick}>\n                {this.props.buttonText}\n            </div>\n        );\n    }\n}\n\nexport default GameButton;"]},"metadata":{},"sourceType":"module"}