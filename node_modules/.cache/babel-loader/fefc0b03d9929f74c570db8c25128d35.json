{"ast":null,"code":"var _jsxFileName = \"/Users/dominikstein/Development/React-Projects/doorgame/src/components/App/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Navigation from '../Navigation/navigation';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton';\nimport closedDoor from \"./closed_door.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numClosedDoors: 3,\n      currentlyPlaying: false,\n      doors: [{\n        id: 'door1',\n        src: closedDoor,\n        open: false\n      }, {\n        id: 'door2',\n        src: closedDoor,\n        open: false\n      }, {\n        id: 'door3',\n        src: closedDoor,\n        open: false\n      }],\n      startButtonText: 'Spiel starten'\n    };\n    this.handleGameConfigurations = this.handleGameConfigurations.bind(this);\n    this.openDoor = this.openDoor.bind(this);\n  }\n\n  handleGameConfigurations() {\n    this.setState({\n      numClosedDoors: 3,\n      currentlyPlaying: true,\n      startButtonText: 'Viel Glück!'\n    });\n  }\n\n  openDoor(door) {\n    console.log(`You have opened ${door}`);\n    let listOfDoors = this.state.doors; //let mutatedListOfDoors = listOfDoors.find(doorKey => (doorKey.id === door));\n\n    let index = listOfDoors.indexOf(listOfDoors.find(doorKey => doorKey.id === door));\n    listOfDoors[index].open = true;\n    this.setState({\n      listOfDoors\n    });\n\n    if (this.state.numOfClosedDoors === 0) {\n      console.log('Oops! Seemed like you have opened all doors already.');\n      this.gameOver();\n    } else {\n      let numOfDoors = this.state.numClosedDoors;\n      --numOfDoors;\n      this.setState({\n        numClosedDoors: numOfDoors\n      });\n    }\n  }\n\n  randomChoreDoorGenerator() {\n    const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n\n    if (randomDoorGenerator === 0) {}\n  }\n  /*randomChoreDoorGenerator() {\n    const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n    if (randomDoorGenerator === 0) {\n        this.setState({doors: {door1: {src: doorImage.robot}}});\n        this.setState({doors: {door2: {src: doorImage.beach}}});\n        this.setState({doors: {door3: {src: doorImage.space}}});\n        //openDoor1 = botDoorPath;\n        //openDoor2 = beachDoorPath;\n        //openDoor3 = spaceDoorPath;\n    } else if (randomDoorGenerator === 1) {\n        this.setState({doors: {door1: {src: doorImage.beach}}});\n        this.setState({doors: {door2: {src: doorImage.robot}}});\n        this.setState({doors: {door3: {src: doorImage.space}}});\n        //openDoor1 = beachDoorPath;\n        //openDoor2 = botDoorPath;\n        //openDoor3 = spaceDoorPath;\n    } else {\n        this.setState({doors: {door1: {src: doorImage.space}}});\n        this.setState({doors: {door2: {src: doorImage.beach}}});\n        this.setState({doors: {door2: {src: doorImage.robot}}});\n        //openDoor1 = beachDoorPath;\n        //openDoor2 = spaceDoorPath;\n        //openDoor3 = botDoorPath;\n    }\n  }*/\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoorGame, {\n        doors: this.state.doors,\n        openDoorLogic: this.openDoor\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameButton, {\n        buttonText: this.state.startButtonText,\n        currentlyPlaying: this.state.currentlyPlaying,\n        startGame: this.handleGameConfigurations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dominikstein/Development/React-Projects/doorgame/src/components/App/App.js"],"names":["React","Navigation","DoorGame","GameButton","App","Component","constructor","props","state","numClosedDoors","currentlyPlaying","doors","id","src","closedDoor","open","startButtonText","handleGameConfigurations","bind","openDoor","setState","door","console","log","listOfDoors","index","indexOf","find","doorKey","numOfClosedDoors","gameOver","numOfDoors","randomChoreDoorGenerator","randomDoorGenerator","Math","floor","random","render"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Navigation from '../Navigation/navigation';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton';\n\nimport closedDoor from './closed_door.svg';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      numClosedDoors: 3,\n      currentlyPlaying: false,\n      doors: [\n        {id: 'door1', src: closedDoor, open: false},\n        {id: 'door2', src: closedDoor, open: false},\n        {id: 'door3', src: closedDoor, open: false}\n      ],\n      startButtonText: 'Spiel starten'\n    };\n    this.handleGameConfigurations = this.handleGameConfigurations.bind(this);\n    this.openDoor = this.openDoor.bind(this);\n  }\n\n  handleGameConfigurations(){\n    this.setState({\n        numClosedDoors: 3,\n        currentlyPlaying: true,\n        startButtonText: 'Viel Glück!'\n    });\n  }\n\n  openDoor(door){\n    console.log(`You have opened ${door}`);\n    let listOfDoors = this.state.doors;\n    //let mutatedListOfDoors = listOfDoors.find(doorKey => (doorKey.id === door));\n    let index = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === door)));\n    listOfDoors[index].open = true;\n    this.setState({listOfDoors});\n\n    if(this.state.numOfClosedDoors === 0){\n      console.log('Oops! Seemed like you have opened all doors already.');\n      this.gameOver();\n    } else {\n      let numOfDoors = this.state.numClosedDoors;\n      --numOfDoors;\n      this.setState({numClosedDoors: numOfDoors});\n    }\n  }\n\n  randomChoreDoorGenerator() {\n    const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n    if (randomDoorGenerator === 0) {\n      \n    }\n  }\n\n      /*randomChoreDoorGenerator() {\n        const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n        if (randomDoorGenerator === 0) {\n            this.setState({doors: {door1: {src: doorImage.robot}}});\n            this.setState({doors: {door2: {src: doorImage.beach}}});\n            this.setState({doors: {door3: {src: doorImage.space}}});\n            //openDoor1 = botDoorPath;\n            //openDoor2 = beachDoorPath;\n            //openDoor3 = spaceDoorPath;\n        } else if (randomDoorGenerator === 1) {\n            this.setState({doors: {door1: {src: doorImage.beach}}});\n            this.setState({doors: {door2: {src: doorImage.robot}}});\n            this.setState({doors: {door3: {src: doorImage.space}}});\n            //openDoor1 = beachDoorPath;\n            //openDoor2 = botDoorPath;\n            //openDoor3 = spaceDoorPath;\n        } else {\n            this.setState({doors: {door1: {src: doorImage.space}}});\n            this.setState({doors: {door2: {src: doorImage.beach}}});\n            this.setState({doors: {door2: {src: doorImage.robot}}});\n            //openDoor1 = beachDoorPath;\n            //openDoor2 = spaceDoorPath;\n            //openDoor3 = botDoorPath;\n        }\n}*/\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <DoorGame doors={this.state.doors} openDoorLogic={this.openDoor}/>\n        <GameButton \n          buttonText={this.state.startButtonText} \n          currentlyPlaying={this.state.currentlyPlaying}\n          startGame={this.handleGameConfigurations}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}