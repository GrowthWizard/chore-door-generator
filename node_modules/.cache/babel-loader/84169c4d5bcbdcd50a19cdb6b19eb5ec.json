{"ast":null,"code":"import _classCallCheck from\"/Users/dominikstein/Development/React-Projects/chore-door-generator/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/dominikstein/Development/React-Projects/chore-door-generator/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/dominikstein/Development/React-Projects/chore-door-generator/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/dominikstein/Development/React-Projects/chore-door-generator/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/dominikstein/Development/React-Projects/chore-door-generator/node_modules/@babel/runtime/helpers/esm/createSuper\";import'./App.css';import React from'react';import Navigation from'../Navigation/navigation';import DoorGame from'../DoorGame/doorGame';import GameButton from'../GameButton/gameButton';//Imports Pictures for rendering later\nimport closedDoor from\"./closed_door.svg\";import robotDoor from\"./robot_door.svg\";import beachDoor from\"./beach_door.svg\";import spaceDoor from\"./space_door.svg\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var doorImage={closedDoor:closedDoor,robot:robotDoor,beach:beachDoor,space:spaceDoor};var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(props){var _this;_classCallCheck(this,App);_this=_super.call(this,props);_this.state={numClosedDoors:0,currentlyPlaying:false,doors:[{id:'door1',src:'',closedDoor:doorImage.closedDoor,open:false},{id:'door2',src:'',closedDoor:doorImage.closedDoor,open:false},{id:'door3',src:'',closedDoor:doorImage.closedDoor,open:false}],startButtonText:'Spiel starten',wins:0,losses:0};_this.handleGameConfigurations=_this.handleGameConfigurations.bind(_assertThisInitialized(_this));_this.openDoor=_this.openDoor.bind(_assertThisInitialized(_this));_this.gameOver=_this.gameOver.bind(_assertThisInitialized(_this));_this.randomChoreDoorGenerator=_this.randomChoreDoorGenerator.bind(_assertThisInitialized(_this));_this.checkForRobot=_this.checkForRobot.bind(_assertThisInitialized(_this));return _this;}_createClass(App,[{key:\"handleGameConfigurations\",value:function handleGameConfigurations(){this.resetGameSettings();this.closeDoors();this.randomChoreDoorGenerator();}},{key:\"openDoor\",value:function openDoor(door){if(this.state.currentlyPlaying===false){this.gameOver();}else{console.log(\"Du hast \".concat(door,\" ge\\xF6ffnet.\"));var listOfDoors=this.state.doors;var index=listOfDoors.indexOf(listOfDoors.find(function(doorKey){return doorKey.id===door;}));listOfDoors[index].open=true;this.reduceDoors();this.setState({doors:listOfDoors});}}},{key:\"checkForRobot\",value:function checkForRobot(door){if(this.state.numClosedDoors===1){this.gameOver('win');}else{var listOfDoors=this.state.doors;var index=listOfDoors.indexOf(listOfDoors.find(function(doorKey){return doorKey.id===door;}));if(listOfDoors[index].src===doorImage.robot){console.log('Viel Spaß beim Putzen!');this.gameOver();}}}},{key:\"reduceDoors\",value:function reduceDoors(){var numOfDoors=this.state.numClosedDoors;--numOfDoors;this.setState({numClosedDoors:numOfDoors});}},{key:\"randomChoreDoorGenerator\",value:function randomChoreDoorGenerator(){var randomDoorGenerator=Math.floor(Math.random()*3);var randomDoors=this.state.doors;if(randomDoorGenerator===0){randomDoors[0].src=doorImage.robot;randomDoors[1].src=doorImage.beach;randomDoors[2].src=doorImage.space;this.setState({doors:randomDoors});}else if(randomDoorGenerator===1){randomDoors[0].src=doorImage.beach;randomDoors[1].src=doorImage.robot;randomDoors[2].src=doorImage.space;this.setState({doors:randomDoors});}else{randomDoors[0].src=doorImage.space;randomDoors[1].src=doorImage.beach;randomDoors[2].src=doorImage.robot;this.setState({doors:randomDoors});}console.log('Türen wurden generiert.');}},{key:\"gameOver\",value:function gameOver(status){if(status==='win'){this.countWins();this.setState({currentlyPlaying:false,startButtonText:'Gewonnen! Erneut spielen?'});}else{this.countLosses();this.setState({currentlyPlaying:false,startButtonText:'Game Over! Erneut spielen?'});}}},{key:\"countWins\",value:function countWins(){var numberOfWins=this.state.wins;numberOfWins++;this.setState({wins:numberOfWins});}},{key:\"countLosses\",value:function countLosses(){var numberOfLosses=this.state.losses;numberOfLosses++;this.setState({losses:numberOfLosses});}},{key:\"closeDoors\",value:function closeDoors(){console.log('Alle Türen sind geschlossen.');var listOfDoors=this.state.doors;listOfDoors[0].open=false;listOfDoors[1].open=false;listOfDoors[2].open=false;this.setState({listOfDoors:listOfDoors});}},{key:\"resetGameSettings\",value:function resetGameSettings(){console.log('GameSettings RESET is DONE');this.setState({numClosedDoors:3,currentlyPlaying:true,doors:[{id:'door1',src:'',closedDoor:doorImage.closedDoor},{id:'door2',src:'',closedDoor:doorImage.closedDoor},{id:'door3',src:'',closedDoor:doorImage.closedDoor}],startButtonText:'Viel Glück!'});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Navigation,{}),/*#__PURE__*/_jsx(DoorGame,{doors:this.state.doors,currentlyPlaying:this.state.currentlyPlaying,openDoorLogic:this.openDoor,checkIfGameOver:this.gameOver,checkForRobot:this.checkForRobot}),/*#__PURE__*/_jsx(GameButton,{buttonText:this.state.startButtonText,currentlyPlaying:this.state.currentlyPlaying,startGame:this.handleGameConfigurations})]});}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/dominikstein/Development/React-Projects/chore-door-generator/src/components/App/App.js"],"names":["React","Navigation","DoorGame","GameButton","doorImage","closedDoor","robot","robotDoor","beach","beachDoor","space","spaceDoor","App","props","state","numClosedDoors","currentlyPlaying","doors","id","src","open","startButtonText","wins","losses","handleGameConfigurations","bind","openDoor","gameOver","randomChoreDoorGenerator","checkForRobot","resetGameSettings","closeDoors","door","console","log","listOfDoors","index","indexOf","find","doorKey","reduceDoors","setState","numOfDoors","randomDoorGenerator","Math","floor","random","randomDoors","status","countWins","countLosses","numberOfWins","numberOfLosses","Component"],"mappings":"8uBAAA,MAAO,WAAP,CACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,sBAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CAEA;0PAMA,GAAMC,CAAAA,SAAS,CAAG,CACdC,UAAU,CAAEA,UADE,CAEdC,KAAK,CAAEC,SAFO,CAGdC,KAAK,CAAEC,SAHO,CAIdC,KAAK,CAAEC,SAJO,CAAlB,C,GAOMC,CAAAA,G,sGACJ,aAAYC,KAAZ,CAAkB,qCAChB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACXC,cAAc,CAAE,CADL,CAEXC,gBAAgB,CAAE,KAFP,CAGXC,KAAK,CAAE,CACL,CAACC,EAAE,CAAE,OAAL,CAAcC,GAAG,CAAE,EAAnB,CAAuBd,UAAU,CAAED,SAAS,CAACC,UAA7C,CAAyDe,IAAI,CAAE,KAA/D,CADK,CAEL,CAACF,EAAE,CAAE,OAAL,CAAcC,GAAG,CAAE,EAAnB,CAAuBd,UAAU,CAAED,SAAS,CAACC,UAA7C,CAAyDe,IAAI,CAAE,KAA/D,CAFK,CAGL,CAACF,EAAE,CAAE,OAAL,CAAcC,GAAG,CAAE,EAAnB,CAAuBd,UAAU,CAAED,SAAS,CAACC,UAA7C,CAAyDe,IAAI,CAAE,KAA/D,CAHK,CAHI,CAQXC,eAAe,CAAE,eARN,CASXC,IAAI,CAAE,CATK,CAUXC,MAAM,CAAE,CAVG,CAAb,CAYA,MAAKC,wBAAL,CAAgC,MAAKA,wBAAL,CAA8BC,IAA9B,+BAAhC,CACA,MAAKC,QAAL,CAAgB,MAAKA,QAAL,CAAcD,IAAd,+BAAhB,CACA,MAAKE,QAAL,CAAgB,MAAKA,QAAL,CAAcF,IAAd,+BAAhB,CACA,MAAKG,wBAAL,CAAgC,MAAKA,wBAAL,CAA8BH,IAA9B,+BAAhC,CACA,MAAKI,aAAL,CAAqB,MAAKA,aAAL,CAAmBJ,IAAnB,+BAArB,CAlBgB,aAmBjB,C,wDAED,mCAA0B,CACxB,KAAKK,iBAAL,GACA,KAAKC,UAAL,GACA,KAAKH,wBAAL,GACD,C,wBAED,kBAASI,IAAT,CAAc,CACZ,GAAI,KAAKlB,KAAL,CAAWE,gBAAX,GAAgC,KAApC,CAA0C,CACxC,KAAKW,QAAL,GACD,CAFD,IAEO,CACLM,OAAO,CAACC,GAAR,mBAAuBF,IAAvB,mBACA,GAAIG,CAAAA,WAAW,CAAG,KAAKrB,KAAL,CAAWG,KAA7B,CACA,GAAImB,CAAAA,KAAK,CAAGD,WAAW,CAACE,OAAZ,CAAoBF,WAAW,CAACG,IAAZ,CAAiB,SAAAC,OAAO,QAAKA,CAAAA,OAAO,CAACrB,EAAR,GAAec,IAApB,EAAxB,CAApB,CAAZ,CACAG,WAAW,CAACC,KAAD,CAAX,CAAmBhB,IAAnB,CAA0B,IAA1B,CACA,KAAKoB,WAAL,GACA,KAAKC,QAAL,CAAc,CAACxB,KAAK,CAAEkB,WAAR,CAAd,EACD,CACF,C,6BAED,uBAAcH,IAAd,CAAoB,CAClB,GAAG,KAAKlB,KAAL,CAAWC,cAAX,GAA8B,CAAjC,CAAmC,CACjC,KAAKY,QAAL,CAAc,KAAd,EACD,CAFD,IAEO,CACL,GAAIQ,CAAAA,WAAW,CAAG,KAAKrB,KAAL,CAAWG,KAA7B,CACA,GAAImB,CAAAA,KAAK,CAAGD,WAAW,CAACE,OAAZ,CAAoBF,WAAW,CAACG,IAAZ,CAAiB,SAAAC,OAAO,QAAKA,CAAAA,OAAO,CAACrB,EAAR,GAAec,IAApB,EAAxB,CAApB,CAAZ,CACA,GAAGG,WAAW,CAACC,KAAD,CAAX,CAAmBjB,GAAnB,GAA2Bf,SAAS,CAACE,KAAxC,CAA8C,CAC5C2B,OAAO,CAACC,GAAR,CAAY,wBAAZ,EACA,KAAKP,QAAL,GACD,CACF,CACF,C,2BAED,sBAAc,CACZ,GAAIe,CAAAA,UAAU,CAAG,KAAK5B,KAAL,CAAWC,cAA5B,CACA,EAAE2B,UAAF,CACA,KAAKD,QAAL,CAAc,CAAC1B,cAAc,CAAE2B,UAAjB,CAAd,EACD,C,wCAED,mCAA2B,CACzB,GAAMC,CAAAA,mBAAmB,CAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,CAA3B,CAA5B,CACA,GAAIC,CAAAA,WAAW,CAAG,KAAKjC,KAAL,CAAWG,KAA7B,CACA,GAAI0B,mBAAmB,GAAK,CAA5B,CAA+B,CAC7BI,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACE,KAA/B,CACAyC,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACI,KAA/B,CACAuC,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACM,KAA/B,CACA,KAAK+B,QAAL,CAAc,CAACxB,KAAK,CAAE8B,WAAR,CAAd,EACD,CALD,IAKO,IAAIJ,mBAAmB,GAAK,CAA5B,CAA+B,CACpCI,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACI,KAA/B,CACAuC,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACE,KAA/B,CACAyC,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACM,KAA/B,CACA,KAAK+B,QAAL,CAAc,CAACxB,KAAK,CAAE8B,WAAR,CAAd,EACH,CALQ,IAKF,CACHA,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACM,KAA/B,CACAqC,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACI,KAA/B,CACAuC,WAAW,CAAC,CAAD,CAAX,CAAe5B,GAAf,CAAqBf,SAAS,CAACE,KAA/B,CACA,KAAKmC,QAAL,CAAc,CAACxB,KAAK,CAAE8B,WAAR,CAAd,EACH,CACDd,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACD,C,wBAEC,kBAASc,MAAT,CAAiB,CACf,GAAIA,MAAM,GAAK,KAAf,CAAsB,CACpB,KAAKC,SAAL,GACA,KAAKR,QAAL,CAAc,CAACzB,gBAAgB,CAAE,KAAnB,CAA0BK,eAAe,CAAE,2BAA3C,CAAd,EACD,CAHD,IAGO,CACL,KAAK6B,WAAL,GACA,KAAKT,QAAL,CAAc,CAACzB,gBAAgB,CAAE,KAAnB,CAA0BK,eAAe,CAAE,4BAA3C,CAAd,EACD,CACF,C,yBAED,oBAAW,CACT,GAAI8B,CAAAA,YAAY,CAAG,KAAKrC,KAAL,CAAWQ,IAA9B,CACA6B,YAAY,GACZ,KAAKV,QAAL,CAAc,CAACnB,IAAI,CAAE6B,YAAP,CAAd,EACD,C,2BAED,sBAAa,CACX,GAAIC,CAAAA,cAAc,CAAG,KAAKtC,KAAL,CAAWS,MAAhC,CACA6B,cAAc,GACd,KAAKX,QAAL,CAAc,CAAClB,MAAM,CAAE6B,cAAT,CAAd,EACD,C,0BAED,qBAAa,CACXnB,OAAO,CAACC,GAAR,CAAY,8BAAZ,EACA,GAAIC,CAAAA,WAAW,CAAG,KAAKrB,KAAL,CAAWG,KAA7B,CACAkB,WAAW,CAAC,CAAD,CAAX,CAAef,IAAf,CAAsB,KAAtB,CACAe,WAAW,CAAC,CAAD,CAAX,CAAef,IAAf,CAAsB,KAAtB,CACAe,WAAW,CAAC,CAAD,CAAX,CAAef,IAAf,CAAsB,KAAtB,CACA,KAAKqB,QAAL,CAAc,CAACN,WAAW,CAAXA,WAAD,CAAd,EACD,C,iCAED,4BAAmB,CACjBF,OAAO,CAACC,GAAR,CAAY,4BAAZ,EACA,KAAKO,QAAL,CAAc,CACZ1B,cAAc,CAAE,CADJ,CAEZC,gBAAgB,CAAE,IAFN,CAGZC,KAAK,CAAE,CACL,CAACC,EAAE,CAAE,OAAL,CAAcC,GAAG,CAAE,EAAnB,CAAuBd,UAAU,CAAED,SAAS,CAACC,UAA7C,CADK,CAEL,CAACa,EAAE,CAAE,OAAL,CAAcC,GAAG,CAAE,EAAnB,CAAuBd,UAAU,CAAED,SAAS,CAACC,UAA7C,CAFK,CAGL,CAACa,EAAE,CAAE,OAAL,CAAcC,GAAG,CAAE,EAAnB,CAAuBd,UAAU,CAAED,SAAS,CAACC,UAA7C,CAHK,CAHK,CAQZgB,eAAe,CAAE,aARL,CAAd,EAUD,C,sBAED,iBAAS,CACP,mBACE,oCACE,KAAC,UAAD,IADF,cAEE,KAAC,QAAD,EACE,KAAK,CAAE,KAAKP,KAAL,CAAWG,KADpB,CAEE,gBAAgB,CAAE,KAAKH,KAAL,CAAWE,gBAF/B,CAGE,aAAa,CAAE,KAAKU,QAHtB,CAIE,eAAe,CAAE,KAAKC,QAJxB,CAKE,aAAa,CAAE,KAAKE,aALtB,EAFF,cAQE,KAAC,UAAD,EACE,UAAU,CAAE,KAAKf,KAAL,CAAWO,eADzB,CAEE,gBAAgB,CAAE,KAAKP,KAAL,CAAWE,gBAF/B,CAGE,SAAS,CAAE,KAAKQ,wBAHlB,EARF,GADF,CAeD,C,iBA/IexB,KAAK,CAACqD,S,EAkJxB,cAAezC,CAAAA,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Navigation from '../Navigation/navigation';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton';\n\n//Imports Pictures for rendering later\nimport closedDoor from './closed_door.svg';\nimport robotDoor from './robot_door.svg';\nimport beachDoor from './beach_door.svg';\nimport spaceDoor from './space_door.svg';\n\nconst doorImage = {\n    closedDoor: closedDoor,\n    robot: robotDoor,\n    beach: beachDoor,\n    space: spaceDoor\n};\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      numClosedDoors: 0,\n      currentlyPlaying: false,\n      doors: [\n        {id: 'door1', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door2', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door3', src: '', closedDoor: doorImage.closedDoor, open: false}\n      ],\n      startButtonText: 'Spiel starten',\n      wins: 0,\n      losses: 0\n    };\n    this.handleGameConfigurations = this.handleGameConfigurations.bind(this);\n    this.openDoor = this.openDoor.bind(this);\n    this.gameOver = this.gameOver.bind(this);\n    this.randomChoreDoorGenerator = this.randomChoreDoorGenerator.bind(this);\n    this.checkForRobot = this.checkForRobot.bind(this);\n  }\n\n  handleGameConfigurations(){\n    this.resetGameSettings();\n    this.closeDoors();\n    this.randomChoreDoorGenerator();\n  }\n\n  openDoor(door){\n    if (this.state.currentlyPlaying === false){\n      this.gameOver();\n    } else {\n      console.log(`Du hast ${door} geöffnet.`);\n      let listOfDoors = this.state.doors;\n      let index = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === door)));\n      listOfDoors[index].open = true;\n      this.reduceDoors();\n      this.setState({doors: listOfDoors});\n    }\n  }\n\n  checkForRobot(door) {\n    if(this.state.numClosedDoors === 1){\n      this.gameOver('win');\n    } else {\n      let listOfDoors = this.state.doors;\n      let index = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === door)));\n      if(listOfDoors[index].src === doorImage.robot){\n        console.log('Viel Spaß beim Putzen!');\n        this.gameOver();\n      }\n    }\n  }\n\n  reduceDoors() {\n    let numOfDoors = this.state.numClosedDoors;\n    --numOfDoors;\n    this.setState({numClosedDoors: numOfDoors});\n  }\n\n  randomChoreDoorGenerator() {\n    const randomDoorGenerator = Math.floor(Math.random() * 3);\n    let randomDoors = this.state.doors;\n    if (randomDoorGenerator === 0) {\n      randomDoors[0].src = doorImage.robot;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.space;\n      this.setState({doors: randomDoors});\n    } else if (randomDoorGenerator === 1) {\n      randomDoors[0].src = doorImage.beach;\n      randomDoors[1].src = doorImage.robot;\n      randomDoors[2].src = doorImage.space;\n      this.setState({doors: randomDoors});\n  } else {\n      randomDoors[0].src = doorImage.space;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.robot;\n      this.setState({doors: randomDoors});\n  }\n  console.log('Türen wurden generiert.')\n}\n\n  gameOver(status) {\n    if (status === 'win') {\n      this.countWins();\n      this.setState({currentlyPlaying: false, startButtonText: 'Gewonnen! Erneut spielen?'});\n    } else {\n      this.countLosses();\n      this.setState({currentlyPlaying: false, startButtonText: 'Game Over! Erneut spielen?'});\n    }\n  }\n\n  countWins(){\n    let numberOfWins = this.state.wins;\n    numberOfWins++;\n    this.setState({wins: numberOfWins});\n  }\n\n  countLosses(){\n    let numberOfLosses = this.state.losses;\n    numberOfLosses++;\n    this.setState({losses: numberOfLosses});\n  }\n\n  closeDoors() {\n    console.log('Alle Türen sind geschlossen.');\n    let listOfDoors = this.state.doors;\n    listOfDoors[0].open = false;\n    listOfDoors[1].open = false;\n    listOfDoors[2].open = false;\n    this.setState({listOfDoors});\n  }\n\n  resetGameSettings(){\n    console.log('GameSettings RESET is DONE');\n    this.setState({\n      numClosedDoors: 3,\n      currentlyPlaying: true,\n      doors: [\n        {id: 'door1', src: '', closedDoor: doorImage.closedDoor},\n        {id: 'door2', src: '', closedDoor: doorImage.closedDoor},\n        {id: 'door3', src: '', closedDoor: doorImage.closedDoor}\n      ],\n      startButtonText: 'Viel Glück!'\n  });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <DoorGame \n          doors={this.state.doors}\n          currentlyPlaying={this.state.currentlyPlaying}\n          openDoorLogic={this.openDoor} \n          checkIfGameOver={this.gameOver} \n          checkForRobot={this.checkForRobot}/>\n        <GameButton \n          buttonText={this.state.startButtonText} \n          currentlyPlaying={this.state.currentlyPlaying}\n          startGame={this.handleGameConfigurations} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}