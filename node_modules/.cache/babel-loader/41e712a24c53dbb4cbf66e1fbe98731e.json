{"ast":null,"code":"var _jsxFileName = \"/Users/dominikstein/Development/React-Projects/doorgame/src/components/App/App.js\";\nimport './App.css';\nimport React from 'react';\nimport Navigation from '../Navigation/navigation';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton'; //Imports Pictures for rendering later\n\nimport closedDoor from \"./closed_door.svg\";\nimport robotDoor from \"./robot_door.svg\";\nimport beachDoor from \"./beach_door.svg\";\nimport spaceDoor from \"./space_door.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst doorImage = {\n  closedDoor: closedDoor,\n  robot: robotDoor,\n  beach: beachDoor,\n  space: spaceDoor\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      numClosedDoors: 0,\n      currentlyPlaying: false,\n      doors: [{\n        id: 'door1',\n        src: '',\n        closedDoor: doorImage.closedDoor,\n        open: false\n      }, {\n        id: 'door2',\n        src: '',\n        closedDoor: doorImage.closedDoor,\n        open: false\n      }, {\n        id: 'door3',\n        src: '',\n        closedDoor: doorImage.closedDoor,\n        open: false\n      }],\n      startButtonText: 'Spiel starten'\n    };\n    this.handleGameConfigurations = this.handleGameConfigurations.bind(this);\n    this.openDoor = this.openDoor.bind(this);\n    this.gameOver = this.gameOver.bind(this);\n    this.randomChoreDoorGenerator = this.randomChoreDoorGenerator.bind(this);\n  }\n\n  handleGameConfigurations() {\n    this.setState({\n      numClosedDoors: 3,\n      currentlyPlaying: true,\n      startButtonText: 'Viel GlÃ¼ck!'\n    });\n  }\n\n  openDoor(door) {\n    if (this.state.currentlyPlaying === false) {\n      this.gameOver();\n    } else {\n      console.log(`You have opened ${door}`);\n      let listOfDoors = this.state.doors;\n      let index = listOfDoors.indexOf(listOfDoors.find(doorKey => doorKey.id === door));\n      listOfDoors[index].open = true;\n      this.reduceDoors();\n      this.setState({\n        doors: listOfDoors\n      });\n    }\n  }\n\n  reduceDoors() {\n    let numOfDoors = this.state.numClosedDoors;\n    --numOfDoors;\n    this.setState({\n      numClosedDoors: numOfDoors\n    });\n  }\n\n  randomChoreDoorGenerator() {\n    const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n    let randomDoors = this.state.doors;\n\n    if (randomDoorGenerator === 0) {\n      randomDoors[0].src = doorImage.robot;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.space;\n      this.setState({\n        doors: randomDoors\n      });\n    } else if (randomDoorGenerator === 1) {\n      randomDoors[0].src = doorImage.beach;\n      randomDoors[1].src = doorImage.robot;\n      randomDoors[2].src = doorImage.space;\n      this.setState({\n        doors: randomDoors\n      });\n    } else {\n      randomDoors[0].src = doorImage.space;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.robot;\n      this.setState({\n        doors: randomDoors\n      });\n    }\n  }\n\n  gameOver() {\n    console.log('You have lost!');\n    this.setState({\n      currentlyPlaying: false,\n      startButtonText: 'Game Over! Erneut spielen?'\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DoorGame, {\n        doors: this.state.doors,\n        currentlyPlaying: this.state.currentlyPlaying,\n        openDoorLogic: this.openDoor,\n        checkIfGameOver: this.gameOver,\n        ChoreDoorGenerator: this.randomChoreDoorGenerator\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(GameButton, {\n        buttonText: this.state.startButtonText,\n        currentlyPlaying: this.state.currentlyPlaying,\n        startGame: this.handleGameConfigurations\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/dominikstein/Development/React-Projects/doorgame/src/components/App/App.js"],"names":["React","Navigation","DoorGame","GameButton","doorImage","closedDoor","robot","robotDoor","beach","beachDoor","space","spaceDoor","App","Component","constructor","props","state","numClosedDoors","currentlyPlaying","doors","id","src","open","startButtonText","handleGameConfigurations","bind","openDoor","gameOver","randomChoreDoorGenerator","setState","door","console","log","listOfDoors","index","indexOf","find","doorKey","reduceDoors","numOfDoors","randomDoorGenerator","Math","floor","random","randomDoors","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB,C,CAEA;;;;;;;AAMA,MAAMC,SAAS,GAAG;AACdC,EAAAA,UAAU,EAAEA,UADE;AAEdC,EAAAA,KAAK,EAAEC,SAFO;AAGdC,EAAAA,KAAK,EAAEC,SAHO;AAIdC,EAAAA,KAAK,EAAEC;AAJO,CAAlB;;AAOA,MAAMC,GAAN,SAAkBZ,KAAK,CAACa,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,cAAc,EAAE,CADL;AAEXC,MAAAA,gBAAgB,EAAE,KAFP;AAGXC,MAAAA,KAAK,EAAE,CACL;AAACC,QAAAA,EAAE,EAAE,OAAL;AAAcC,QAAAA,GAAG,EAAE,EAAnB;AAAuBhB,QAAAA,UAAU,EAAED,SAAS,CAACC,UAA7C;AAAyDiB,QAAAA,IAAI,EAAE;AAA/D,OADK,EAEL;AAACF,QAAAA,EAAE,EAAE,OAAL;AAAcC,QAAAA,GAAG,EAAE,EAAnB;AAAuBhB,QAAAA,UAAU,EAAED,SAAS,CAACC,UAA7C;AAAyDiB,QAAAA,IAAI,EAAE;AAA/D,OAFK,EAGL;AAACF,QAAAA,EAAE,EAAE,OAAL;AAAcC,QAAAA,GAAG,EAAE,EAAnB;AAAuBhB,QAAAA,UAAU,EAAED,SAAS,CAACC,UAA7C;AAAyDiB,QAAAA,IAAI,EAAE;AAA/D,OAHK,CAHI;AAQXC,MAAAA,eAAe,EAAE;AARN,KAAb;AAUA,SAAKC,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BC,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,QAAL,GAAgB,KAAKA,QAAL,CAAcF,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKG,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BH,IAA9B,CAAmC,IAAnC,CAAhC;AACD;;AAEDD,EAAAA,wBAAwB,GAAE;AACxB,SAAKK,QAAL,CAAc;AACVZ,MAAAA,cAAc,EAAE,CADN;AAEVC,MAAAA,gBAAgB,EAAE,IAFR;AAGVK,MAAAA,eAAe,EAAE;AAHP,KAAd;AAKD;;AAEDG,EAAAA,QAAQ,CAACI,IAAD,EAAM;AACZ,QAAI,KAAKd,KAAL,CAAWE,gBAAX,KAAgC,KAApC,EAA0C;AACxC,WAAKS,QAAL;AACD,KAFD,MAEO;AACLI,MAAAA,OAAO,CAACC,GAAR,CAAa,mBAAkBF,IAAK,EAApC;AACA,UAAIG,WAAW,GAAG,KAAKjB,KAAL,CAAWG,KAA7B;AACA,UAAIe,KAAK,GAAGD,WAAW,CAACE,OAAZ,CAAoBF,WAAW,CAACG,IAAZ,CAAiBC,OAAO,IAAKA,OAAO,CAACjB,EAAR,KAAeU,IAA5C,CAApB,CAAZ;AACAG,MAAAA,WAAW,CAACC,KAAD,CAAX,CAAmBZ,IAAnB,GAA0B,IAA1B;AACA,WAAKgB,WAAL;AACA,WAAKT,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAEc;AAAR,OAAd;AACD;AACF;;AAEDK,EAAAA,WAAW,GAAG;AACZ,QAAIC,UAAU,GAAG,KAAKvB,KAAL,CAAWC,cAA5B;AACA,MAAEsB,UAAF;AACA,SAAKV,QAAL,CAAc;AAACZ,MAAAA,cAAc,EAAEsB;AAAjB,KAAd;AACD;;AAEDX,EAAAA,wBAAwB,GAAG;AACzB,UAAMY,mBAAmB,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAK3B,KAAL,CAAWC,cAAtC,CAA5B;AACA,QAAI2B,WAAW,GAAG,KAAK5B,KAAL,CAAWG,KAA7B;;AACA,QAAIqB,mBAAmB,KAAK,CAA5B,EAA+B;AAC7BI,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACE,KAA/B;AACAsC,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACI,KAA/B;AACAoC,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACM,KAA/B;AACA,WAAKmB,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAEyB;AAAR,OAAd;AACD,KALD,MAKO,IAAIJ,mBAAmB,KAAK,CAA5B,EAA+B;AACpCI,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACI,KAA/B;AACAoC,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACE,KAA/B;AACAsC,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACM,KAA/B;AACA,WAAKmB,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAEyB;AAAR,OAAd;AACH,KALQ,MAKF;AACHA,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACM,KAA/B;AACAkC,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACI,KAA/B;AACAoC,MAAAA,WAAW,CAAC,CAAD,CAAX,CAAevB,GAAf,GAAqBjB,SAAS,CAACE,KAA/B;AACA,WAAKuB,QAAL,CAAc;AAACV,QAAAA,KAAK,EAAEyB;AAAR,OAAd;AACH;AACF;;AAECjB,EAAAA,QAAQ,GAAG;AACPI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,SAAKH,QAAL,CAAc;AAACX,MAAAA,gBAAgB,EAAE,KAAnB;AAA0BK,MAAAA,eAAe,EAAE;AAA3C,KAAd;AACH;;AAEDsB,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AACE,QAAA,KAAK,EAAE,KAAK7B,KAAL,CAAWG,KADpB;AAEE,QAAA,gBAAgB,EAAE,KAAKH,KAAL,CAAWE,gBAF/B;AAGE,QAAA,aAAa,EAAE,KAAKQ,QAHtB;AAIE,QAAA,eAAe,EAAE,KAAKC,QAJxB;AAKE,QAAA,kBAAkB,EAAE,KAAKC;AAL3B;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE,QAAC,UAAD;AACE,QAAA,UAAU,EAAE,KAAKZ,KAAL,CAAWO,eADzB;AAEE,QAAA,gBAAgB,EAAE,KAAKP,KAAL,CAAWE,gBAF/B;AAGE,QAAA,SAAS,EAAE,KAAKM;AAHlB;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAeD;;AAxF+B;;AA2FlC,eAAeZ,GAAf","sourcesContent":["import './App.css';\nimport React from 'react';\nimport Navigation from '../Navigation/navigation';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton';\n\n//Imports Pictures for rendering later\nimport closedDoor from './closed_door.svg';\nimport robotDoor from './robot_door.svg';\nimport beachDoor from './beach_door.svg';\nimport spaceDoor from './space_door.svg';\n\nconst doorImage = {\n    closedDoor: closedDoor,\n    robot: robotDoor,\n    beach: beachDoor,\n    space: spaceDoor\n};\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      numClosedDoors: 0,\n      currentlyPlaying: false,\n      doors: [\n        {id: 'door1', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door2', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door3', src: '', closedDoor: doorImage.closedDoor, open: false}\n      ],\n      startButtonText: 'Spiel starten'\n    };\n    this.handleGameConfigurations = this.handleGameConfigurations.bind(this);\n    this.openDoor = this.openDoor.bind(this);\n    this.gameOver = this.gameOver.bind(this);\n    this.randomChoreDoorGenerator = this.randomChoreDoorGenerator.bind(this);\n  }\n\n  handleGameConfigurations(){\n    this.setState({\n        numClosedDoors: 3,\n        currentlyPlaying: true,\n        startButtonText: 'Viel GlÃ¼ck!'\n    });\n  }\n\n  openDoor(door){\n    if (this.state.currentlyPlaying === false){\n      this.gameOver();\n    } else {\n      console.log(`You have opened ${door}`);\n      let listOfDoors = this.state.doors;\n      let index = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === door)));\n      listOfDoors[index].open = true;\n      this.reduceDoors();\n      this.setState({doors: listOfDoors});\n    }\n  }\n\n  reduceDoors() {\n    let numOfDoors = this.state.numClosedDoors;\n    --numOfDoors;\n    this.setState({numClosedDoors: numOfDoors});\n  }\n\n  randomChoreDoorGenerator() {\n    const randomDoorGenerator = Math.floor(Math.random() * this.state.numClosedDoors);\n    let randomDoors = this.state.doors;\n    if (randomDoorGenerator === 0) {\n      randomDoors[0].src = doorImage.robot;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.space;\n      this.setState({doors: randomDoors});\n    } else if (randomDoorGenerator === 1) {\n      randomDoors[0].src = doorImage.beach;\n      randomDoors[1].src = doorImage.robot;\n      randomDoors[2].src = doorImage.space;\n      this.setState({doors: randomDoors});\n  } else {\n      randomDoors[0].src = doorImage.space;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.robot;\n      this.setState({doors: randomDoors});\n  }\n}\n\n  gameOver() {\n      console.log('You have lost!');\n      this.setState({currentlyPlaying: false, startButtonText: 'Game Over! Erneut spielen?'});\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <DoorGame \n          doors={this.state.doors}\n          currentlyPlaying={this.state.currentlyPlaying}\n          openDoorLogic={this.openDoor} \n          checkIfGameOver={this.gameOver} \n          ChoreDoorGenerator={this.randomChoreDoorGenerator}/>\n        <GameButton \n          buttonText={this.state.startButtonText} \n          currentlyPlaying={this.state.currentlyPlaying}\n          startGame={this.handleGameConfigurations} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}