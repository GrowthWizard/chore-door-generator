{"version":3,"sources":["components/Instructions/star.svg","components/Instructions/instructions.js","components/Navigation/logo.svg","components/Navigation/navigation.js","components/DoorGame/doorGame.js","components/GameButton/gameButton.js","components/App/App.js","components/App/closed_door.svg","components/App/robot_door.svg","components/App/beach_door.svg","components/App/space_door.svg","reportWebVitals.js","index.js"],"names":["Instructions","className","src","star","React","Component","Navigation","logo","doorGame","props","handleOnClick","bind","event","this","openDoor","checkForRobot","target","id","checkIfGameOver","listOfDoors","doors","chosenDoor","indexOf","find","doorKey","open","openDoorLogic","console","log","map","door","currentlyPlaying","closedDoor","isOpen","onClick","GameButton","startGame","buttonText","doorImage","robot","beach","space","App","state","numClosedDoors","startButtonText","wins","losses","handleGameConfigurations","gameOver","randomChoreDoorGenerator","resetGameSettings","closeDoors","index","reduceDoors","setState","numOfDoors","randomDoorGenerator","Math","floor","random","randomDoors","status","countWins","countLosses","numberOfWins","numberOfLosses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9008707a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/star.536059c4.svg\";","import React from 'react';\nimport './instructions.css';\nimport star from './star.svg';\n\n//import \n\nclass Instructions extends React.Component{\n\n    render(){\n        return (\n            <div className=\"title-row\">\n                <img src={star} />\n                <p className=\"instructions-title\">Anleitung</p>\n                <img src={star} />\n                <table className=\"instructions-row\">\n                <tr>\n                    <td className=\"instructions-number\">1</td>\n                    <td className=\"instructions-text\">Hinter einer dieser Türen verbirgt sich der böse Haushaltsroboter.</td>\n                </tr>\n                <tr>\n                    <td className=\"instructions-number\">2</td>\n                    <td className=\"instructions-text\">Du willst dich vor deinen Haushaltspflichten drücken, vermeide also den Haushaltsroboter zu treffen!</td>\n                </tr>\n                <tr>\n                    <td className=\"instructions-number\">3</td>\n                    <td className=\"instructions-text\">Vermeide den Haushaltsroboter bis du die letzte Tür geöffnet hast... und du gewinnst!</td>\n                </tr>\n                <tr>\n                    <td className=\"instructions-number\">4</td>\n                    <td className=\"instructions-text\">Wie lange kannst du dem Haushaltsroboter entgehen?</td>\n                </tr>\n            </table>\n            </div>\n        );\n    }\n}\n\nexport default Instructions;","export default __webpack_public_path__ + \"static/media/logo.6d0a2e83.svg\";","import React from 'react';\nimport './navigation.css';\nimport Instructions from '../Instructions/instructions';\n\n//import Images for rendering\nimport logo from './logo.svg';\n\nclass Navigation extends React.Component{\n\n    render(){\n        return (\n            <div className=\"navigation\">\n                <div className=\"header\">\n                    <img src={logo} />\n                </div>\n                <Instructions />\n            </div>\n        );\n    }\n}\n\nexport default Navigation;","import React from 'react';\nimport './doorGame.css';\n\nclass doorGame extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n\n    handleOnClick(event){\n        this.openDoor(event)\n        this.props.checkForRobot(event.target.id);\n    }\n\n\n    handleCheckForGameOver(){\n        this.props.checkIfGameOver();\n    }\n\n    openDoor(event){\n        let listOfDoors = this.props.doors;\n        let chosenDoor = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === event.target.id)));\n        if(listOfDoors[chosenDoor].open === false){\n            this.props.openDoorLogic(event.target.id);\n        } else {\n            console.log('Error: Door is already opened');\n            return;\n        }\n    }\n\n    render(){\n        return (\n            <div className=\"door-row\">\n                {\n                    this.props.doors.map(door => {\n                      return <img\n                      key={door.id}\n                      id={door.id}\n                      className=\"door-frame\"\n                      src={(this.props.currentlyPlaying === false && door.open === false) || (this.props.currentlyPlaying === true && door.open === false) ? door.closedDoor : door.src}\n                      isOpen={door.open} \n                      onClick={this.handleOnClick} />\n                })\n                }\n          </div>\n        );\n    }\n};\n\nexport default doorGame;","import React from 'react';\nimport './gameButton.css';\nimport doorGame from '../DoorGame/doorGame';\n\nclass GameButton extends React.Component{\n    constructor(props){\n        super(props);\n        this.handleOnClick = this.handleOnClick.bind(this);\n    }\n\n    handleOnClick() {\n        if(!this.props.currentlyPlaying){\n            this.props.startGame();\n        } else {\n            console.log('Du kannst ein Spiel nur starten, nachdem du verloren oder gewonnen hast.')\n        }\n    }\n\n    render(){\n        return (\n            <div id=\"start\" \n                className=\"start-row\" \n                onClick={this.handleOnClick}>\n                {this.props.buttonText}\n            </div>\n        );\n    }\n}\n\nexport default GameButton;","import './App.css';\nimport React from 'react';\nimport Navigation from '../Navigation/navigation';\nimport DoorGame from '../DoorGame/doorGame';\nimport GameButton from '../GameButton/gameButton';\n\n//Imports Pictures for rendering later\nimport closedDoor from './closed_door.svg';\nimport robotDoor from './robot_door.svg';\nimport beachDoor from './beach_door.svg';\nimport spaceDoor from './space_door.svg';\n\nconst doorImage = {\n    closedDoor: closedDoor,\n    robot: robotDoor,\n    beach: beachDoor,\n    space: spaceDoor\n};\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      numClosedDoors: 0,\n      currentlyPlaying: false,\n      doors: [\n        {id: 'door1', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door2', src: '', closedDoor: doorImage.closedDoor, open: false},\n        {id: 'door3', src: '', closedDoor: doorImage.closedDoor, open: false}\n      ],\n      startButtonText: 'Spiel starten',\n      wins: 0,\n      losses: 0\n    };\n    this.handleGameConfigurations = this.handleGameConfigurations.bind(this);\n    this.openDoor = this.openDoor.bind(this);\n    this.gameOver = this.gameOver.bind(this);\n    this.randomChoreDoorGenerator = this.randomChoreDoorGenerator.bind(this);\n    this.checkForRobot = this.checkForRobot.bind(this);\n  }\n\n  handleGameConfigurations(){\n    this.resetGameSettings();\n    this.closeDoors();\n    this.randomChoreDoorGenerator();\n  }\n\n  openDoor(door){\n    if (this.state.currentlyPlaying === false){\n      this.gameOver();\n    } else {\n      console.log(`Du hast ${door} geöffnet.`);\n      let listOfDoors = this.state.doors;\n      let index = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === door)));\n      listOfDoors[index].open = true;\n      this.reduceDoors();\n      this.setState({doors: listOfDoors});\n    }\n  }\n\n  checkForRobot(door) {\n    if(this.state.numClosedDoors === 1){\n      this.gameOver('win');\n    } else {\n      let listOfDoors = this.state.doors;\n      let index = listOfDoors.indexOf(listOfDoors.find(doorKey => (doorKey.id === door)));\n      if(listOfDoors[index].src === doorImage.robot){\n        console.log('Viel Spaß beim Putzen!');\n        this.gameOver();\n      }\n    }\n  }\n\n  reduceDoors() {\n    let numOfDoors = this.state.numClosedDoors;\n    --numOfDoors;\n    this.setState({numClosedDoors: numOfDoors});\n  }\n\n  randomChoreDoorGenerator() {\n    const randomDoorGenerator = Math.floor(Math.random() * 3);\n    let randomDoors = this.state.doors;\n    if (randomDoorGenerator === 0) {\n      randomDoors[0].src = doorImage.robot;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.space;\n      this.setState({doors: randomDoors});\n    } else if (randomDoorGenerator === 1) {\n      randomDoors[0].src = doorImage.beach;\n      randomDoors[1].src = doorImage.robot;\n      randomDoors[2].src = doorImage.space;\n      this.setState({doors: randomDoors});\n  } else {\n      randomDoors[0].src = doorImage.space;\n      randomDoors[1].src = doorImage.beach;\n      randomDoors[2].src = doorImage.robot;\n      this.setState({doors: randomDoors});\n  }\n  console.log('Türen wurden generiert.')\n}\n\n  gameOver(status) {\n    if (status === 'win') {\n      this.countWins();\n      this.setState({currentlyPlaying: false, startButtonText: 'Gewonnen! Erneut spielen?'});\n    } else {\n      this.countLosses();\n      this.setState({currentlyPlaying: false, startButtonText: 'Game Over! Erneut spielen?'});\n    }\n  }\n\n  countWins(){\n    let numberOfWins = this.state.wins;\n    numberOfWins++;\n    this.setState({wins: numberOfWins});\n  }\n\n  countLosses(){\n    let numberOfLosses = this.state.losses;\n    numberOfLosses++;\n    this.setState({losses: numberOfLosses});\n  }\n\n  closeDoors() {\n    console.log('Alle Türen sind geschlossen.');\n    let listOfDoors = this.state.doors;\n    listOfDoors[0].open = false;\n    listOfDoors[1].open = false;\n    listOfDoors[2].open = false;\n    this.setState({listOfDoors});\n  }\n\n  resetGameSettings(){\n    console.log('GameSettings RESET is DONE');\n    this.setState({\n      numClosedDoors: 3,\n      currentlyPlaying: true,\n      doors: [\n        {id: 'door1', src: '', closedDoor: doorImage.closedDoor},\n        {id: 'door2', src: '', closedDoor: doorImage.closedDoor},\n        {id: 'door3', src: '', closedDoor: doorImage.closedDoor}\n      ],\n      startButtonText: 'Viel Glück!'\n  });\n  }\n\n  render() {\n    return (\n      <div>\n        <Navigation />\n        <DoorGame \n          doors={this.state.doors}\n          currentlyPlaying={this.state.currentlyPlaying}\n          openDoorLogic={this.openDoor} \n          checkIfGameOver={this.gameOver} \n          checkForRobot={this.checkForRobot}/>\n        <GameButton \n          buttonText={this.state.startButtonText} \n          currentlyPlaying={this.state.currentlyPlaying}\n          startGame={this.handleGameConfigurations} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/closed_door.1866ea8c.svg\";","export default __webpack_public_path__ + \"static/media/robot_door.1db674bb.svg\";","export default __webpack_public_path__ + \"static/media/beach_door.9370cca8.svg\";","export default __webpack_public_path__ + \"static/media/space_door.fe3b5cec.svg\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}